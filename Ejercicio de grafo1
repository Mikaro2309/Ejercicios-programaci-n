class Grafo:
    def __init__(self):
        self.matriz = []

    def agregar_nodo(self):
        n = len(self.matriz)
        for fila in self.matriz:
            fila.append(0)  # Agregar una nueva columna a las filas existentes
        self.matriz.append([0] * (n + 1))  # Nueva fila con ceros

    def agregar_arista(self, origen, destino, peso=1):
        if 0 <= origen < len(self.matriz) and 0 <= destino < len(self.matriz):
            self.matriz[origen][destino] = peso

    def mostrar_matriz(self):
        for fila in self.matriz:
            print(fila)

# Ejemplo de uso:
g = Grafo()

# Agregar 5 nodos
for _ in range(5):
    g.agregar_nodo()

# Agregar aristas entre los nodos
g.agregar_arista(0, 1, 2)  # Arista de nodo 0 a nodo 1 con peso 2
g.agregar_arista(0, 2, 3)  # Arista de nodo 0 a nodo 2 con peso 3
g.agregar_arista(1, 3, 4)  # Arista de nodo 1 a nodo 3 con peso 4
g.agregar_arista(2, 4, 5)  # Arista de nodo 2 a nodo 4 con peso 5
g.agregar_arista(3, 4, 1)  # Arista de nodo 3 a nodo 4 con peso 1

# Mostrar la matriz de adyacencia
g.mostrar_matriz()
